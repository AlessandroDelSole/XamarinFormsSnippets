<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Converting with IValueConverter</Title>
      <Author>Alessandro Del Sole</Author>
      <Description>Convert type on bindings with IValueConverter</Description>
      <HelpUrl>https://github.com/AlessandroDelSole/XamarinFormsSnippets</HelpUrl>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword></Keyword>
      </Keywords>
      <Shortcut />
    </Header>
    <Snippet>
      <References />
      <Imports />
      <Declarations>
        <Literal Editable="true">
          <ID>BoolToStringConverter</ID>
          <ToolTip>Replace with your class name</ToolTip>
          <Default>BoolToStringConverter</Default>
          <Function />
        </Literal>
        <Literal Editable="true">
          <ID>bool</ID>
          <ToolTip>Replace with destination type</ToolTip>
          <Default>bool</Default>
          <Function />
        </Literal>
        <Literal Editable="true">
          <ID>string</ID>
          <ToolTip>Replace with target type in data source</ToolTip>
          <Default>string</Default>
          <Function />
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="method body" Delimiter="$"><![CDATA[    public class $BoolToStringConverter$ : Xamarin.Forms.IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            var $bool$Value = ($bool$)value;
            if ($bool$Value == true) return "Yes";
            return "No";
        }

        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            var strValue = ($string$)value;
            if (strValue == "Yes") return true;
            return false;
        }
    }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>